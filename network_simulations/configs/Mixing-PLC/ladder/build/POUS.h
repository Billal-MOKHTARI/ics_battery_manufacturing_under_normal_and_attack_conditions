#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// PROGRAM MIXING
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,M)
  __DECLARE_VAR(BOOL,A)
  __DECLARE_VAR(BOOL,B)
  __DECLARE_VAR(BOOL,D1)
  __DECLARE_VAR(BOOL,D2)
  __DECLARE_VAR(BOOL,E1)
  __DECLARE_VAR(BOOL,E2)
  __DECLARE_VAR(BOOL,F)
  __DECLARE_VAR(BOOL,G)
  __DECLARE_VAR(BOOL,L)
  __DECLARE_VAR(BOOL,EA)
  __DECLARE_VAR(BOOL,EB)
  __DECLARE_VAR(BOOL,ED)
  __DECLARE_VAR(BOOL,EE)
  __DECLARE_VAR(BOOL,EF)
  __DECLARE_VAR(BOOL,EG)
  __DECLARE_VAR(BOOL,M1)
  __DECLARE_VAR(BOOL,M2)
  __DECLARE_VAR(BOOL,X0)
  __DECLARE_VAR(BOOL,X1)
  __DECLARE_VAR(BOOL,X2)
  __DECLARE_VAR(BOOL,X3)
  __DECLARE_VAR(BOOL,X4)
  __DECLARE_VAR(BOOL,X5)
  __DECLARE_VAR(BOOL,X6)
  __DECLARE_VAR(BOOL,X7)
  __DECLARE_VAR(BOOL,X8)
  __DECLARE_VAR(BOOL,T0)
  __DECLARE_VAR(BOOL,T1)
  __DECLARE_VAR(BOOL,T2)
  __DECLARE_VAR(BOOL,T3)
  __DECLARE_VAR(BOOL,T4)
  __DECLARE_VAR(BOOL,T5)
  __DECLARE_VAR(BOOL,T6)
  __DECLARE_VAR(BOOL,T7)
  __DECLARE_VAR(BOOL,T8)
  __DECLARE_VAR(INT,PV)
  __DECLARE_VAR(INT,CV)
  __DECLARE_VAR(INT,TIME_1)
  __DECLARE_VAR(INT,TIME_2)
  __DECLARE_VAR(INT,TIMER_GAUGE_1)
  __DECLARE_VAR(INT,TIMER_GAUGE_2)
  __DECLARE_VAR(BOOL,CU)
  TP TP1;
  TP TP2;
  CTU CTU0;
  TON TON0;
  __DECLARE_VAR(TIME,_TMP_INT_TO_TIME191_OUT)
  __DECLARE_VAR(TIME,_TMP_INT_TO_TIME42_OUT)
  R_TRIG R_TRIG1;
  __DECLARE_VAR(TIME,_TMP_INT_TO_TIME43_OUT)
  __DECLARE_VAR(INT,_TMP_TIME_TO_INT188_OUT)
  __DECLARE_VAR(INT,_TMP_TIME_TO_INT40_OUT)

} MIXING;

void MIXING_init__(MIXING *data__, BOOL retain);
// Code part
void MIXING_body__(MIXING *data__);
#endif //__POUS_H
