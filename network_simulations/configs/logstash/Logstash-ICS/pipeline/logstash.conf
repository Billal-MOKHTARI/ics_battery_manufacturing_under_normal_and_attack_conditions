input {
  udp {
    port => 5014
    type => syslog
  }
}

filter {
  grok {
    match => {
      "message" => [

        # User inputs a command
        "<%{INT:priority}>%{INT:seq_id}: %{DATA:hostname}: %{INT:log_id}: \*%{DATA:timestamp}: %%{WORD:facility}-%{INT:severity}-%{WORD:message_type}: User:%{WORD:user}  logged command:%{GREEDYDATA:command}",

        # User enables or disables an interface
        "<%{INT:priority}>%{INT:seq_id}: %{DATA:hostname}: %{INT:log_id}: \*%{DATA:timestamp}: %%{WORD:facility}-%{INT:severity}-%{WORD:message_type}: Interface %{WORD:interface_name}%{DATA:interface_number}, changed state to %{GREEDYDATA:state}",

        # The switch is restarted
        "<%{INT:priority}>%{INT:seq_id}: %{DATA:hostname}: %{INT:log_id}: \*%{DATA:timestamp}: %%{WORD:facility}-%{INT:severity}-%{WORD:message_type}: %{GREEDYDATA:content}",

        # SNMP agent cold start
        "<%{INT:priority}>%{INT:seq_id}: %{DATA:hostname}: %{INT:log_id}: \*%{DATA:timestamp}: %%{WORD:facility}-%{INT:severity}-%{WORD:message_type}: SNMP agent on host %{WORD:host} %{GREEDYDATA:content}",

        # Logging to host
        "<%{INT:priority}>%{INT:seq_id}: %{DATA:hostname}: %{INT:log_id}: \*%{DATA:timestamp}: %%{WORD:facility}-%{INT:severity}-%{WORD:message_type}: Logging to host %{IPV4:host_ip} %{GREEDYDATA:content}",

        # Line protocol on interface state change
        "<%{INT:priority}>%{INT:seq_id}: %{DATA:hostname}: %{INT:log_id}: \*%{DATA:timestamp}: %%{WORD:facility}-%{INT:severity}-%{WORD:message_type}: Line protocol on Interface %{WORD:interface_name}%{DATA:interface_number}, changed state to %{GREEDYDATA:state}"
      ]
    }
    tag_on_failure => ["_grokparsefailure"]
  }
}

output {
  elasticsearch {
    hosts => ["http://10.1.1.2:9200"]
    index => "cisco-vios-logs-%{+YYYY.MM.dd}"
    ssl => false
    ssl_certificate_verification => false
  }
}
